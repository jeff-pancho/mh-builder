{"version":3,"sources":["components/Building.js","utils/constants.js","utils/utils.js","components/Grid.js","components/Picker.js","components/Buttons.js","components/Builder.js","index.js"],"names":["Building","row","column","width","height","style","backgroundColor","colour","gridColumn","gridRow","className","WIDTH","HEIGHT","BUILDINGS","cssGrid","size","background","generateEmptyGrid","Array","fill","map","checkForAvailableSpace","grid","endRow","endColumn","r","c","length","Grid","building","isGhost","id","key","buildingId","onClick","props","removeBuilding","backgroundSize","SQUARE_SIZE","gridTemplateColumns","gridTemplateRows","buildingElements","this","buildings","filter","renderBuilding","push","buildingGhost","e","onMouseMove","onContextMenu","React","Component","Picker","picks","Buttons","handleUndo","handleRedo","handleClear","Builder","state","history","currentBuilding","mousePos","stateNumber","slice","current","JSON","parse","stringify","concat","createBuilding","setState","renderBuildingGhost","rect","currentTarget","getBoundingClientRect","x","clientX","left","y","clientY","top","relativeCoords","Math","floor","prevRow","prevColumn","preventDefault","mouseRow","mouseColumn","handleOnClick","handleOnMouseMove","handleRemoveBuilding","handlePicker","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eb0e0c5f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Building = ({row, column, width, height, colour}) => {\r\n    let style = {\r\n        backgroundColor: colour,\r\n        gridColumn: column + 1 + \" / span \" + width,\r\n        gridRow: row + 1 + \" / span \" + height\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className=\"building\"\r\n            style={style}\r\n        >\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Building;","// 46x46 original size\r\nexport const WIDTH = 46;\r\nexport const HEIGHT = 46;\r\nexport const SQUARE_SIZE = 15;\r\n\r\nexport const BUILDINGS = [\r\n    {\r\n        width: 1,\r\n        height: 1,\r\n        colour: \"#FF0000\"\r\n    },\r\n    {\r\n        width: 1,\r\n        height: 2,\r\n        colour: \"#FF7F00\"\r\n    },\r\n    {\r\n        width: 2,\r\n        height: 1,\r\n        colour: \"#FFFF00\"\r\n    },\r\n    {\r\n        width: 2,\r\n        height: 2,\r\n        colour: \"#00FF00\"\r\n    },\r\n    {\r\n        width: 2,\r\n        height: 3,\r\n        colour: \"#0000FF\"\r\n    },\r\n    {\r\n        width: 3,\r\n        height: 3,\r\n        colour: \"#4B0082\"\r\n    },\r\n];","const cssGrid = (size) => {\r\n    let background = \"linear-gradient(to right, \";\r\n    background += \"transparent \" + (size - 1) + \"px, \";\r\n    background += \"black \" + (size - 1) + \"px, \";\r\n    background += \"black \" + size + \"px), \";\r\n    background += \"linear-gradient(to bottom, \";\r\n    background += \"transparent \" + (size - 1) + \"px, \";\r\n    background += \"black \" + (size - 1) + \"px, \";\r\n    background += \"black \" + size + \"px)\";\r\n    return background;\r\n}\r\n\r\nconst relativeCoords = (e) => {\r\n    const rect = e.currentTarget.getBoundingClientRect();\r\n    const x = e.clientX - rect.left;\r\n    const y = e.clientY - rect.top;\r\n    return {x, y};\r\n}\r\n\r\nconst generateEmptyGrid = (width, height) => {\r\n    const grid = Array(height).fill().map(() => {\r\n        return Array(width).fill(null);\r\n    });\r\n    return grid;\r\n}\r\n\r\nconst checkForAvailableSpace = (grid, row, column, width, height) => {\r\n    const endRow = row + height;\r\n    const endColumn = column + width;\r\n    for (let r = row; r < endRow; r++) {\r\n        for (let c = column; c < endColumn; c++) {\r\n            if (r > grid.length - 1 || c > grid[r].length - 1\r\n                || grid[r][c] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nexport { \r\n    cssGrid,\r\n    relativeCoords,\r\n    generateEmptyGrid,\r\n    checkForAvailableSpace\r\n};","import React from \"react\";\r\nimport Building from \"./Building\";\r\nimport { WIDTH, HEIGHT, SQUARE_SIZE } from \"../utils/constants\";\r\nimport { cssGrid } from \"../utils/utils\";\r\n\r\nclass Grid extends React.Component {\r\n    renderBuilding(building, isGhost, id) {\r\n        const { row, column } = building;\r\n        const key = isGhost ? \"ghost\" : `${row},${column}`;\r\n        \r\n        return (\r\n            <Building \r\n                key={key} \r\n                buildingId={id}\r\n                onClick={() => this.props.removeBuilding(id)}\r\n                { ...building }\r\n            />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        let style = {\r\n            width: SQUARE_SIZE * WIDTH,\r\n            height: SQUARE_SIZE * HEIGHT,\r\n            background: cssGrid(SQUARE_SIZE),\r\n            backgroundSize: SQUARE_SIZE + \"px \" + SQUARE_SIZE + \"px\",\r\n            gridTemplateColumns: \"repeat(\" + WIDTH + \", \" + SQUARE_SIZE + \"px)\",\r\n            gridTemplateRows: \"repeat(\" + HEIGHT + \", \" + SQUARE_SIZE + \"px)\"\r\n        };\r\n\r\n        let buildingElements = this.props.buildings.filter(\r\n            (building) => {\r\n                return building !== null;\r\n            }\r\n        ).map((building, id) => {\r\n            return this.renderBuilding(building, false, id);\r\n        });\r\n        buildingElements.push(\r\n            this.renderBuilding(this.props.buildingGhost, true)\r\n        );\r\n\r\n        return (\r\n            <div\r\n                className=\"grid\" \r\n                style={style}\r\n                onClick={(e) => this.props.onClick(e)}\r\n                onMouseMove={(e) => this.props.onMouseMove(e)}\r\n                onContextMenu={(e) => this.props.onContextMenu(e)}\r\n            >\r\n                {buildingElements}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Grid;","import React from \"react\";\r\nimport { BUILDINGS } from \"../utils/constants\";\r\n\r\nconst Picker = ({ onClick }) => {\r\n    let picks = BUILDINGS.map((building) => {\r\n        let { colour } = building;\r\n        return (\r\n            <div\r\n                key={colour}\r\n                className=\"square\"\r\n                style={{backgroundColor: colour}}\r\n                onClick={() => onClick(building)}\r\n            >\r\n                \r\n            </div>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className=\"picker-container\">\r\n            {picks}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Picker;","import React from \"react\";\r\n\r\nconst Buttons = ({ handleUndo, handleRedo, handleClear }) => {\r\n    return (\r\n        <div className=\"buttons-container\">\r\n            <button onClick={() => handleUndo()}>Undo</button>\r\n            <button onClick={() => handleRedo()}>Redo</button>\r\n            <button onClick={() => handleClear()}>Clear</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Buttons;","import React from \"react\";\r\nimport Grid from \"./Grid\";\r\nimport Picker from \"./Picker\";\r\nimport Buttons from \"./Buttons\";\r\nimport { WIDTH, HEIGHT, SQUARE_SIZE, BUILDINGS } from \"../utils/constants\";\r\nimport { \r\n    relativeCoords,\r\n    generateEmptyGrid,\r\n    checkForAvailableSpace\r\n} from \"../utils/utils\";\r\n\r\nclass Builder extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            history: [{\r\n                buildings: [],\r\n                grid: generateEmptyGrid(WIDTH, HEIGHT),\r\n            }],\r\n            currentBuilding: BUILDINGS[0],\r\n            mousePos: { row: 0, column: 0 },\r\n            buildingGhost: BUILDINGS[0],\r\n            stateNumber: 0\r\n        };\r\n    }\r\n\r\n    createBuilding(row, column, building) {\r\n        return {\r\n            row: row,\r\n            column: column,\r\n            ...building\r\n        };\r\n    }\r\n    \r\n    handleOnClick() {\r\n        const { width, height } = this.state.currentBuilding;\r\n        const { row, column } = this.state.mousePos;\r\n        const endRow = row + height;\r\n        const endColumn = column + width;\r\n\r\n        const history = this.state.history.slice(0, this.state.stateNumber + 1);\r\n        // deep-copy of object\r\n        const current = JSON.parse(JSON.stringify(history[this.state.stateNumber]));\r\n        const grid = current.grid.slice()\r\n        \r\n        if (checkForAvailableSpace(grid, row, column, width, height)) {\r\n            let buildings = current.buildings.slice();\r\n\r\n            for (let r = row; r < endRow; r++) {\r\n                for (let c = column; c < endColumn; c++) {\r\n                    grid[r][c] = buildings.length;\r\n                }\r\n            }\r\n            \r\n            buildings = buildings.concat([\r\n                this.createBuilding(row, column, this.state.currentBuilding)\r\n            ]);\r\n\r\n            this.setState({\r\n                history: history.concat([{\r\n                    buildings: buildings,\r\n                    grid: grid\r\n                }]),\r\n                stateNumber: this.state.stateNumber + 1,\r\n                buildingGhost: this.renderBuildingGhost(row, column)\r\n            });\r\n        }\r\n    }\r\n\r\n    handleOnMouseMove(e) {\r\n        const { x, y } = relativeCoords(e);\r\n        const row = Math.floor(y / SQUARE_SIZE);\r\n        const column = Math.floor(x / SQUARE_SIZE);\r\n        const {row: prevRow, column: prevColumn} = this.state.mousePos;\r\n        \r\n        if (row !== prevRow || column !== prevColumn) {\r\n            // update to new row/column pos\r\n            this.setState({\r\n                mousePos: {row: row, column: column},\r\n                buildingGhost: this.renderBuildingGhost(row, column)\r\n            });\r\n            \r\n            // console.log({row: row, column: column});\r\n        }\r\n    }\r\n\r\n    handleRemoveBuilding(e) {\r\n        e.preventDefault();\r\n        const history = this.state.history.slice(0, this.state.stateNumber + 1);\r\n        const current = JSON.parse(JSON.stringify(history[this.state.stateNumber]));\r\n        const grid = current.grid.slice();\r\n        const {row: mouseRow, column: mouseColumn} = this.state.mousePos;\r\n        const id = grid[mouseRow][mouseColumn];\r\n\r\n        if (id !== null) {\r\n            const buildings = current.buildings.slice();\r\n            const { row, column, width, height } = buildings[id];\r\n            const endRow = row + height;\r\n            const endColumn = column + width;\r\n\r\n            for (let r = row; r < endRow; r++) {\r\n                for (let c = column; c < endColumn; c++) {\r\n                    grid[r][c] = null;\r\n                }\r\n            }\r\n            buildings[id] = null;\r\n\r\n            this.setState({\r\n                history: history.concat([{\r\n                    buildings: buildings,\r\n                    grid: grid\r\n                }]),\r\n                stateNumber: this.state.stateNumber + 1,\r\n                buildingGhost: this.renderBuildingGhost(mouseRow, mouseColumn)\r\n            });\r\n        }\r\n    }\r\n\r\n    handlePicker(building) {\r\n        this.setState({\r\n            currentBuilding: building\r\n        });\r\n    }\r\n\r\n    renderBuildingGhost(row, column) {\r\n        const history = this.state.history.slice(0, this.state.stateNumber + 1);\r\n        const current = history[this.state.stateNumber];\r\n        const grid = current.grid.slice();\r\n        const { width, height } = this.state.currentBuilding;\r\n        const buildingGhost = this.createBuilding(row, column, this.state.currentBuilding);\r\n        if (!checkForAvailableSpace(grid, row, column, width, height)) {\r\n            buildingGhost.colour = \"#8a0000\";\r\n        }\r\n        \r\n        return buildingGhost;\r\n    }\r\n\r\n    handleUndo() {\r\n        if (this.state.stateNumber > 0) {\r\n            this.setState({\r\n                stateNumber: this.state.stateNumber - 1\r\n            });\r\n        }\r\n    }\r\n\r\n    handleRedo() {\r\n        if (this.state.stateNumber < this.state.history.length - 1) {\r\n            this.setState({\r\n                stateNumber: this.state.stateNumber + 1\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    handleClear() {\r\n        const history = this.state.history.slice(0, this.state.stateNumber + 1);\r\n\r\n        this.setState({\r\n            history: history.concat([{\r\n                buildings: [],\r\n                grid: generateEmptyGrid(WIDTH, HEIGHT),\r\n            }]),\r\n            stateNumber: this.state.stateNumber + 1\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const history = this.state.history;\r\n        const current = history[this.state.stateNumber];\r\n\r\n        return (\r\n            <div>\r\n                <Grid \r\n                    buildings={current.buildings}\r\n                    buildingGhost={this.state.buildingGhost}\r\n                    onClick={() => this.handleOnClick()}\r\n                    onMouseMove={(e) => this.handleOnMouseMove(e)}\r\n                    onContextMenu={(e) => this.handleRemoveBuilding(e)} \r\n                />\r\n                <Picker onClick={(building) => this.handlePicker(building)} />\r\n                <Buttons\r\n                    handleUndo={() => this.handleUndo()}\r\n                    handleRedo={() => this.handleRedo()}\r\n                    handleClear={() => this.handleClear()}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Builder;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport Builder from \"./components/Builder.js\"\r\n\r\nReactDOM.render(\r\n    <Builder />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}